ref to:https://github.com/YongYuIT/Fabric-study/tree/master/hello-fabric2.0/build-netrowk/test2-orderer-with-kafka

$ docker stop $(docker ps -aq)
$ docker rm -f $(docker ps -aq)
$ docker network prune
$ docker volume rm $(docker volume list)
$ cd thk_network
$ docker-compose -f docker-compose-zookeeper.yaml up -d

$ docker-compose -f docker-compose-kafka.yaml up -d

$ docker exec -it kafka1.thinking.com /bin/bash
# cd /kafka/bin
# ./kafka-topics.sh --create --zookeeper test_1.thinking.com:2181 --replication-factor 2 --partitions 3 --topic test-with-create
# ./kafka-topics.sh --zookeeper test_1.thinking.com:2181 --describe --topic test-with-create

$ docker-compose -f docker-compose-kafka-manager.yaml up -d
$ docker-compose -f docker-compose-go.yaml up -d

---------------------------------------------------------------------------
kafka常用命令
---------------------------------------------------------------------------
export KAFKAS=kafka1.thinking.com:9092,kafka2.thinking.com:9092,kafka3.thinking.com:9092,kafka4.thinking.com:9092
#### 列举出kafka内所有主题
# ./kafka-topics.sh --list --bootstrap-server ${KAFKAS}
#### 列举出kafka内所有主题
# ./kafka-topics.sh --describe --bootstrap-server ${KAFKAS}
#### 创建消费者组
# ./kafka-console-consumer.sh --topic fuck_test20200513006 --consumer-property group.id=fuck_test_001_grp --bootstrap-server ${KAFKAS}
#### 查看消费者组
# ./kafka-consumer-groups.sh --list --bootstrap-server ${KAFKAS}
# ./kafka-consumer-groups.sh --group fuck_test_003_grp --describe --bootstrap-server ${KAFKAS}
---------------------------------------------------------------------------
zk常用命令
---------------------------------------------------------------------------
$ docker exec -it test_1.thinking.com /bin/bash
# cd /zookeeper/bin/
# sh zkCli.sh
####查看节点信息
ls /
ls /fuck_test20200508008_off/part_0
get /fuck_test20200508008_off/part_0

