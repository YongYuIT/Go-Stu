研究如何用Go实现一个分布式文件存储系统

步骤1：
用Go实现文件上传下载，实现一个单节点的文件存储系统
Done

步骤2：
优化，实现断点上传，分段下载
doing

步骤3：各节点通过kafka+gRPC共享文件信息

步骤4：参考fabric全网共识的机制，每个节点独立维护全量文件索引




关于文件同步策略：
1、所有文件服务器到zk上创建临时节点，声明可用状态，并写入自己的负载情况
2、上传时，需要请求任意一台文件服务器文件，查询此刻适用的文件服务器
3、收到第2步请求的文件服务器到zk上查询负载最小的服务器，并返回这台服务器的文件上传API供客户端上传文件
4、文件服务器接收到上传的文件之后，立即向除了自己以外，负载最小的服务器同步文件，同步成功就会在自己和被同步的服务器中留下相应的记录。
   同步失败会在自己的文件记录中留下记录，进入重试队列
5、在文件下载的时候，需要向任意一台服务器请求下载路径。
6、文件服务器收到下载路径请求之后，先查询自己本机有没有文件，如果有返回自己的下载API，如果没有就按照负载从小到大请求zk上其他服务器，返回下载API

关于负载均衡：
1、无论是上传还是下载，都需要预先请求获取上传API和下载API。实际提供API的总是在zk上更新负载最小的。
2、虽然有了1中的自平衡策略。但是预请求本身的负载并未做处理，建议实际部署的时候用nginx做负载均衡

关于停机、重启、初始化
